JFDML JFormDesigner: "5.1.1.0.120" Java: "1.7.0_51" encoding: "UTF-8"

new FormModel {
	contentType: "form/swing"
	root: new FormRoot {
		auxiliary() {
			"JavaCodeGenerator.defaultVariableModifiers": 4
			"JavaCodeGenerator.defaultHandlerModifiers": 4
		}
		add( new FormContainer( "javax.swing.JPanel", new FormLayoutManager( class com.jgoodies.forms.layout.FormLayout ) {
			"$columnSpecs": "default:grow"
			"$rowSpecs": "default, linegap, fill:default:grow, linegap, default"
		} ) {
			name: "this"
			"minimumSize": new java.awt.Dimension( 850, 539 )
			"preferredSize": new java.awt.Dimension( 850, 610 )
			add( new FormContainer( "javax.swing.JMenuBar", new FormLayoutManager( class javax.swing.JMenuBar ) ) {
				name: "menuBar1"
				add( new FormContainer( "javax.swing.JMenu", new FormLayoutManager( class javax.swing.JMenu ) ) {
					name: "menu1"
					"text": "File"
					"mnemonic": 70
					add( new FormComponent( "javax.swing.JMenuItem" ) {
						name: "openFolderMenuItem"
						"text": "Open folder"
						"icon": new com.jformdesigner.model.SwingIcon( 2, "FileView.directoryIcon" )
						"accelerator": static javax.swing.KeyStroke getKeyStroke( 79, 260, false )
					} )
					add( new FormComponent( "javax.swing.JMenuItem" ) {
						name: "openCatalogueMenuItem"
						"text": "Open catalogue"
					} )
					add( new FormComponent( "javax.swing.JPopupMenu$Separator" ) {
						name: "separator1"
					} )
					add( new FormComponent( "javax.swing.JMenuItem" ) {
						name: "exitMenuItem"
						"text": "Exit"
						"icon": new com.jformdesigner.model.SwingIcon( 0, "/exit.png" )
					} )
				} )
			}, new FormLayoutConstraints( class com.jgoodies.forms.layout.CellConstraints ) )
			add( new FormContainer( "javax.swing.JSplitPane", new FormLayoutManager( class javax.swing.JSplitPane ) ) {
				name: "mainBodySplitPane"
				"orientation": 0
				"border": &EmptyBorder0 new javax.swing.border.EmptyBorder( 5, 5, 5, 5 )
				add( new FormContainer( "javax.swing.JSplitPane", new FormLayoutManager( class javax.swing.JSplitPane ) ) {
					name: "topLevelSplitPane"
					"border": sfield com.jformdesigner.model.FormObject NULL_VALUE
					"minimumSize": new java.awt.Dimension( 787, 300 )
					"preferredSize": new java.awt.Dimension( 787, 300 )
					add( new FormContainer( "javax.swing.JPanel", new FormLayoutManager( class com.jgoodies.forms.layout.FormLayout ) {
						"$columnSpecs": "default, labelcompgap, default:grow, labelcompgap, default, labelcompgap, default, labelcompgap, default"
						"$rowSpecs": "fill:default:grow, linegap, default"
					} ) {
						name: "sourceFolderPanel"
						"preferredSize": new java.awt.Dimension( 580, 400 )
						"minimumSize": new java.awt.Dimension( 580, 400 )
						add( new FormContainer( "com.jgoodies.uif_lite.panel.SimpleInternalFrame", new FormLayoutManager( class com.jgoodies.forms.layout.FormLayout ) {
							"$columnSpecs": "default:grow"
							"$rowSpecs": "fill:default:grow"
						} ) {
							name: "imageFilesContainer"
							"title": "Images"
							"minimumSize": new java.awt.Dimension( 600, 55 )
							"toolBar": new FormReference( "imageInternalFrameToolbar" )
							add( new FormContainer( "javax.swing.JScrollPane", new FormLayoutManager( class javax.swing.JScrollPane ) ) {
								name: "fileTableContainer"
								add( new FormComponent( "javax.swing.JTable" ) {
									name: "fileTable"
									"rowSelectionAllowed": false
									"gridColor": sfield java.awt.SystemColor controlShadow
								} )
							}, new FormLayoutConstraints( class com.jgoodies.forms.layout.CellConstraints ) {
								"vAlign": sfield com.jgoodies.forms.layout.CellConstraints FILL
							} )
						}, new FormLayoutConstraints( class com.jgoodies.forms.layout.CellConstraints ) {
							"gridWidth": 9
						} )
						add( new FormComponent( "javax.swing.JLabel" ) {
							name: "targetDirectoryLabel"
							"text": "Save to"
						}, new FormLayoutConstraints( class com.jgoodies.forms.layout.CellConstraints ) {
							"gridY": 3
						} )
						add( new FormComponent( "javax.swing.JTextField" ) {
							name: "targetDirectoryValueLabel"
							"editable": false
						}, new FormLayoutConstraints( class com.jgoodies.forms.layout.CellConstraints ) {
							"gridX": 3
							"hAlign": sfield com.jgoodies.forms.layout.CellConstraints FILL
							"gridY": 3
						} )
						add( new FormComponent( "javax.swing.JButton" ) {
							name: "targetDirectoryBrowseButton"
							"text": "Browse"
							"icon": sfield com.jformdesigner.model.FormObject NULL_VALUE
						}, new FormLayoutConstraints( class com.jgoodies.forms.layout.CellConstraints ) {
							"gridX": 5
							"gridY": 3
						} )
						add( new FormComponent( "javax.swing.JButton" ) {
							name: "processButton"
							"icon": new com.jformdesigner.model.SwingIcon( 0, "/go-next.png" )
							"border": static com.jgoodies.forms.factories.Borders createEmptyBorder( "2dlu, 2dlu, 2dlu, 2dlu" )
							"text": "Start Processing"
						}, new FormLayoutConstraints( class com.jgoodies.forms.layout.CellConstraints ) {
							"gridX": 7
							"gridY": 3
						} )
						add( new FormComponent( "javax.swing.JButton" ) {
							name: "stopButton"
							"icon": new com.jformdesigner.model.SwingIcon( 0, "/stop.png" )
							"enabled": false
							"border": static com.jgoodies.forms.factories.Borders createEmptyBorder( "2dlu, 2dlu, 2dlu, 2dlu" )
							"text": "Stop Processing"
						}, new FormLayoutConstraints( class com.jgoodies.forms.layout.CellConstraints ) {
							"gridX": 9
							"gridY": 3
						} )
					}, new FormLayoutConstraints( class java.lang.String ) {
						"value": "left"
					} )
					add( new FormContainer( "javax.swing.JPanel", new FormLayoutManager( class com.jgoodies.forms.layout.FormLayout ) {
						"$columnSpecs": "default:grow"
						"$rowSpecs": "fill:default:grow"
					} ) {
						name: "cataloguePanel"
						"minimumSize": new java.awt.Dimension( 200, 52 )
						"preferredSize": new java.awt.Dimension( 200, 448 )
						add( new FormContainer( "com.jgoodies.uif_lite.panel.SimpleInternalFrame", new FormLayoutManager( class com.jgoodies.forms.layout.FormLayout ) {
							"$columnSpecs": "default:grow"
							"$rowSpecs": "fill:default:grow"
						} ) {
							name: "catalogueContainer"
							"title": "Catalogue"
							"toolBar": new FormReference( "catalogueInternalFrameToolbar" )
							add( new FormContainer( "javax.swing.JScrollPane", new FormLayoutManager( class javax.swing.JScrollPane ) ) {
								name: "catalogueScrollPane"
								add( new FormComponent( "javax.swing.JTable" ) {
									name: "catalogueTable"
								} )
							}, new FormLayoutConstraints( class com.jgoodies.forms.layout.CellConstraints ) {
								"gridX": 1
								"gridY": 1
							} )
						}, new FormLayoutConstraints( class com.jgoodies.forms.layout.CellConstraints ) {
							"gridX": 1
							"gridY": 1
						} )
					}, new FormLayoutConstraints( class java.lang.String ) {
						"value": "right"
					} )
				}, new FormLayoutConstraints( class java.lang.String ) {
					"value": "left"
				} )
				add( new FormContainer( "com.jgoodies.uif_lite.panel.SimpleInternalFrame", new FormLayoutManager( class com.jgoodies.forms.layout.FormLayout ) {
					"$columnSpecs": "default:grow"
					"$rowSpecs": "fill:default:grow"
				} ) {
					name: "outputContainer"
					"title": "Logs"
					"toolBar": new FormReference( "logsInternalFrameToolbar" )
					"minimumSize": new java.awt.Dimension( 66, 125 )
					"preferredSize": new java.awt.Dimension( 66, 125 )
					add( new FormContainer( "javax.swing.JScrollPane", new FormLayoutManager( class javax.swing.JScrollPane ) ) {
						name: "logScrollPane"
						add( new FormComponent( "javax.swing.JTextArea" ) {
							name: "logTextArea"
							"editable": false
						} )
					}, new FormLayoutConstraints( class com.jgoodies.forms.layout.CellConstraints ) {
						"hAlign": sfield com.jgoodies.forms.layout.CellConstraints FILL
						"vAlign": sfield com.jgoodies.forms.layout.CellConstraints FILL
					} )
				}, new FormLayoutConstraints( class java.lang.String ) {
					"value": "right"
				} )
			}, new FormLayoutConstraints( class com.jgoodies.forms.layout.CellConstraints ) {
				"hAlign": sfield com.jgoodies.forms.layout.CellConstraints FILL
				"vAlign": sfield com.jgoodies.forms.layout.CellConstraints FILL
				"gridY": 3
			} )
			add( new FormContainer( "javax.swing.JPanel", new FormLayoutManager( class com.jgoodies.forms.layout.FormLayout ) {
				"$columnSpecs": "default, labelcompgap, default:grow"
				"$rowSpecs": "default"
			} ) {
				name: "statusBarPanel"
				"border": #EmptyBorder0
				add( new FormComponent( "com.jformdesigner.designer.wrapper.JGoodiesFormsLabel" ) {
					name: "progressLabel"
					"textWithMnemonic": "text"
					"text": "Progress"
				}, new FormLayoutConstraints( class com.jgoodies.forms.layout.CellConstraints ) )
				add( new FormComponent( "javax.swing.JProgressBar" ) {
					name: "processProgressBar"
					"string": "0"
				}, new FormLayoutConstraints( class com.jgoodies.forms.layout.CellConstraints ) {
					"gridX": 3
				} )
			}, new FormLayoutConstraints( class com.jgoodies.forms.layout.CellConstraints ) {
				"gridY": 5
				"hAlign": sfield com.jgoodies.forms.layout.CellConstraints FILL
			} )
		}, new FormLayoutConstraints( null ) {
			"location": new java.awt.Point( 30, 10 )
			"size": new java.awt.Dimension( 800, 600 )
		} )
		add( new FormContainer( "javax.swing.JToolBar", new FormLayoutManager( class javax.swing.JToolBar ) ) {
			name: "logsInternalFrameToolbar"
			add( new FormComponent( "javax.swing.JButton" ) {
				name: "clearLogButton"
				"icon": new com.jformdesigner.model.SwingIcon( 0, "/clear.png" )
				"border": static com.jgoodies.forms.factories.Borders createEmptyBorder( "2dlu, 2dlu, 2dlu, 2dlu" )
			} )
		}, new FormLayoutConstraints( null ) {
			"location": new java.awt.Point( 845, 100 )
		} )
		add( new FormContainer( "javax.swing.JToolBar", new FormLayoutManager( class javax.swing.JToolBar ) ) {
			name: "imageInternalFrameToolbar"
			add( new FormComponent( "javax.swing.JButton" ) {
				name: "toolbarOpenFolderButton"
				"icon": new com.jformdesigner.model.SwingIcon( 0, "/directory.png" )
				"toolTipText": "Open folder that contains the images to be processed"
				"border": static com.jgoodies.forms.factories.Borders createEmptyBorder( "2dlu, 2dlu, 2dlu, 2dlu" )
			} )
		}, new FormLayoutConstraints( null ) {
			"location": new java.awt.Point( 855, 65 )
		} )
		add( new FormContainer( "javax.swing.JToolBar", new FormLayoutManager( class javax.swing.JToolBar ) ) {
			name: "catalogueInternalFrameToolbar"
			add( new FormComponent( "javax.swing.JButton" ) {
				name: "toolbarOpenCatalogueButton"
				"icon": new com.jformdesigner.model.SwingIcon( 0, "/catalogue.png" )
				"toolTipText": "Open catalogue file containing the barcode and the corresponding product name"
				"border": static com.jgoodies.forms.factories.Borders createEmptyBorder( "2dlu, 2dlu, 2dlu, 2dlu" )
			} )
		}, new FormLayoutConstraints( null ) {
			"location": new java.awt.Point( 860, 145 )
		} )
	}
}
